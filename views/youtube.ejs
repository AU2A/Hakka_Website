<!DOCTYPE html>
<html>

<head>
    <title>Youtube decode</title>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
</head>

<body style='margin:0;padding:0;border: 0;'>
    <div>
        <div>
            <p style='text-align: center;font-size: 30px;'>Youtube語音辨識</p>
        </div>
    </div>
    <div style='text-align: center;'>
        <input style='font-size: 20px;' id='url'>
        <input type="button" style='font-size: 20px;' value="送出" onclick="reloadurl()">
    </div>
    <br>
    <div style='text-align: center;'>
        <div id="player"></div>
    </div>
</body>
<script>
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: 'M7lc1UVf-VE',
            playerVars: {
                'playsinline': 1
            },
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }

    function reloadurl() {
        var val = document.getElementById("url").value;
        console.log(val)
        player.loadVideoById(videoId=val,startSeconds=0)

        // player
    }

    function autoRefresh() {
        console.log(player.playerInfo.currentTime);
    }
    setInterval('autoRefresh()', 500);
</script>

</html>